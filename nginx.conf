# # server {
# #   listen 8080;
  

# #   location / {
# #     root /usr/share/nginx/html;
# #     index index.html index.htm;
# #     try_files $uri $uri/ /index.html;
# #   }

# #   # Add this block to proxy API requests to your backend
# #   location /api/ { # Assuming your frontend makes API calls starting with /api/
# #     proxy_pass http://backend:8080/; # 'backend' is the Docker Compose service name
# #                                   # '5000' is the port your Node.js backend listens on
# #     proxy_set_header Host $host;
# #     proxy_set_header X-Real-IP $remote_addr;
# #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #     proxy_set_header X-Forwarded-Proto $scheme;
# #   }

# #   error_page 500 502 503 504 /50x.html;
# #   location = /50x.html {
# #     root /usr/share/nginx/html;
# #   }
# # }

#  server {
#   listen 8080; # Nginx listens on port 8080 inside the container
#   server_tokens off;

#   location / {
#     root /usr/share/nginx/html;
#     index index.html index.htm;
#     try_files $uri $uri/ /index.html;
#   }

#   # IMPORTANT: Remove the /api/ proxy block for Cloud Run deployment!
#   # Your React app will directly call the backend's public Cloud Run URL.
#   # This proxy is only relevant if frontend and backend were in the same container,
#   # or if using an API Gateway/Load Balancer external to Cloud Run.

#   error_page 500 502 503 504 /50x.html;
#   location = /50x.html {
#     root /usr/share/nginx/html;
#   }
# }